package com.foodhub.controllers;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.foodhub.model.AuthRequest;
import com.foodhub.model.User;
import com.foodhub.repository.UserRepo;
import com.foodhub.security.JwtUtil;
import com.foodhub.security.*;

@RestController
@RequestMapping("/api/auth")
public class AuthController {
	
	@Autowired
	private UserRepo userRepo;
	
	@Autowired
	private AuthenticationManager authManager;
	
	@Autowired
	private JwtUtil jwtUtil;
	
	@Autowired
	private PasswordEncoder encoder;
	
	@PostMapping("/register")
	public ResponseEntity<?> register(@RequestBody User user){
		if(userRepo.findByEmail(user.getEmail()).isPresent()) {
			return ResponseEntity.badRequest().body("User already exists");
		}
		return ResponseEntity.ok(userRepo.save(user));
	}
	
	@PostMapping("/login")
	public ResponseEntity<?> login(@RequestBody AuthRequest request){
		Optional<User> optionalUser = userRepo.findByEmail(request.getEmail());
		
		if(optionalUser.isEmpty()) {
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Invalid email or password");
		}
		
		User user = optionalUser.get();
		if(!)
	}
}
